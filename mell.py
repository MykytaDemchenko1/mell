from config import BOT_TOKEN
import telebot
from telebot import types
import time
import threading

bot = telebot.TeleBot(BOT_TOKEN)

# –•—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_locations = {}


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –≤ —Ñ–æ—Ä–º–∞—Ç DMS
def convert_to_dms(degrees, is_latitude=True):
    direction = "N" if is_latitude and degrees >= 0 else "S" if is_latitude else "E" if degrees >= 0 else "W"
    degrees = abs(degrees)
    d = int(degrees)
    m = int((degrees - d) * 60)
    s = round((degrees - d - m / 60) * 3600, 1)
    return f"{d}¬∞{m}'{s}\"{direction}"


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –ª–æ–∫–∞—Ü–∏–∏ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
def send_location_updates(chat_id):
    while chat_id in user_locations:
        location = user_locations[chat_id]
        lat_dms = convert_to_dms(location['latitude'], is_latitude=True)
        lon_dms = convert_to_dms(location['longitude'], is_latitude=False)
        bot.send_message(chat_id, f"–¢–µ–∫—É—â–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã:\n{lat_dms} {lon_dms}")
        time.sleep(5)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def start_message(message):
    markup = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    location_button = types.KeyboardButton("üìç –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∂–∏–≤–æ–π –ª–æ–∫–∞—Ü–∏–µ–π", request_location=True)
    markup.add(location_button)

    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏—é —Å–≤–æ–µ–π –ª–æ–∫–∞—Ü–∏–∏.",
                     reply_markup=markup)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ª–æ–∫–∞—Ü–∏–∏
@bot.message_handler(content_types=['location'])
def handle_location(message):
    if message.location is not None:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ª–æ–∫–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_locations[message.chat.id] = {
            'latitude': message.location.latitude,
            'longitude': message.location.longitude
        }
        bot.send_message(message.chat.id,
                         "–Ø –Ω–∞—á–∞–ª –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –≤–∞—à—É –ª–æ–∫–∞—Ü–∏—é –∏ –±—É–¥—É –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥.")

        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ—Ç–æ–∫ –¥–ª—è —Ä–µ–≥—É–ª—è—Ä–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –ª–æ–∫–∞—Ü–∏–∏
        threading.Thread(target=send_location_updates, args=(message.chat.id,), daemon=True).start()
    else:
        bot.send_message(message.chat.id, "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã.")


bot.polling()
